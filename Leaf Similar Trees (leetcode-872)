import java.util.ArrayList;
import java.util.List;

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

public class Solution {
    public boolean leafSimilar(TreeNode root1, TreeNode root2) {
        List<Integer> list1 = new ArrayList<>();
        List<Integer> list2 = new ArrayList<>();

        helper(list1, root1);
        helper(list2. root2);

        // Check if both lists are equal return true else return false
        if (list1.equals(list2)) {
            return true;
        }
        else{
            return false;
        }
    }

    // Function for Depth First Search
    helper(List<Integer> list, TreeNode root){
        if (root == null) {
            return;
        }
        if (root.left == null && root.right == null) {
            list.add(root);
            return;
        }
        else{
            helper(root.left);
            helper(root.right);
        }
    }
}
